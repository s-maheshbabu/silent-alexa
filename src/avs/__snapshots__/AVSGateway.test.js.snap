// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`calls fetch with the right options and return true when trying to send a happy case AddOrUpdateReport event 1`] = `
Object {
  "body": "--silent-alexa-http-boundary
Content-Disposition: form-data; name=\\"metadata\\"
Content-Type: application/json; charset=UTF-8

{\\"event\\":{\\"header\\":{\\"namespace\\":\\"Alexa.Discovery\\",\\"name\\":\\"AddOrUpdateReport\\",\\"payloadVersion\\":\\"3\\",\\"messageId\\":\\"mock-uuid-generated-for-testing\\",\\"eventCorrelationToken\\":\\"mock-uuid-generated-for-testing\\"},\\"payload\\":{\\"scope\\":{\\"type\\":\\"BearerToken\\",\\"token\\":\\"a mock access_token\\"},\\"endpoints\\":[{\\"endpointId\\":\\"amzn1.application-oa2-client.b7bd09596de34d37a2403a712f137e22::Silent_Alexa::12345\\",\\"registration\\":{\\"productId\\":\\"Silent_Alexa\\",\\"deviceSerialNumber\\":\\"12345\\"},\\"manufacturerName\\":\\"Silent Voice Assistants\\",\\"description\\":\\"Interact with voice assistants without having to talk to them.\\",\\"friendlyName\\":\\"Silent Alexa\\",\\"displayCategories\\":[\\"COMPUTER\\",\\"LAPTOP\\",\\"TABLET\\"],\\"capabilities\\":[{\\"type\\":\\"AlexaInterface\\",\\"interface\\":\\"SpeechSynthesizer\\",\\"version\\":\\"1.3\\"}],\\"connections\\":[{\\"type\\":\\"UNKNOWN\\",\\"value\\":\\"12345\\"}]}]}}}",
  "cache": "no-store",
  "headers": Object {
    "Authorization": "Bearer a mock access_token",
    "content-type": "multipart/form-data; boundary=silent-alexa-http-boundary",
  },
  "method": "POST",
}
`;

exports[`calls fetch with the right options when trying to send a happy case TextMessage event and extracts the response string 1`] = `
Object {
  "body": "--silent-alexa-http-boundary
Content-Disposition: form-data; name=\\"metadata\\"
Content-Type: application/json; charset=UTF-8

{\\"event\\":{\\"header\\":{\\"namespace\\":\\"Text\\",\\"name\\":\\"TextMessage\\",\\"messageId\\":\\"mock-uuid-generated-for-testing\\"},\\"payload\\":{\\"textMessage\\":\\"user request to Alexa\\"}}}",
  "cache": "no-store",
  "headers": Object {
    "Authorization": "Bearer a mock access_token",
    "content-type": "multipart/form-data; boundary=silent-alexa-http-boundary",
  },
  "method": "POST",
}
`;

exports[`handles the happy case where Alexa returns an empty response (can happen when Alexa has nothing to say, for example, in response to user saying 'shutup')
or responds with nothing (can happen when user says something senseless like 'dramatic ink') 1`] = `
Object {
  "body": "--silent-alexa-http-boundary
Content-Disposition: form-data; name=\\"metadata\\"
Content-Type: application/json; charset=UTF-8

{\\"event\\":{\\"header\\":{\\"namespace\\":\\"Text\\",\\"name\\":\\"TextMessage\\",\\"messageId\\":\\"mock-uuid-generated-for-testing\\"},\\"payload\\":{\\"textMessage\\":\\"user request to Alexa\\"}}}",
  "cache": "no-store",
  "headers": Object {
    "Authorization": "Bearer a mock access_token",
    "content-type": "multipart/form-data; boundary=silent-alexa-http-boundary",
  },
  "method": "POST",
}
`;

exports[`handles the happy case where Alexa returns an empty response (can happen when Alexa has nothing to say, for example, in response to user saying 'shutup')
or responds with nothing (can happen when user says something senseless like 'dramatic ink') 2`] = `
Object {
  "body": "--silent-alexa-http-boundary
Content-Disposition: form-data; name=\\"metadata\\"
Content-Type: application/json; charset=UTF-8

{\\"event\\":{\\"header\\":{\\"namespace\\":\\"Text\\",\\"name\\":\\"TextMessage\\",\\"messageId\\":\\"mock-uuid-generated-for-testing\\"},\\"payload\\":{\\"textMessage\\":\\"user request to Alexa\\"}}}",
  "cache": "no-store",
  "headers": Object {
    "Authorization": "Bearer a mock access_token",
    "content-type": "multipart/form-data; boundary=silent-alexa-http-boundary",
  },
  "method": "POST",
}
`;
